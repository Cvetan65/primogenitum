{"ast":null,"code":"import { CREATE_EVENT, UPDATE_EVENT, DELETE_EVENT, FETCH_EVENTS, LISTEN_TO_EVENT_CHAT, CLEAR_COMMENTS, LISTEN_TO_SELECTED_EVENT, CLEAR_EVENTS, SET_FILTER, SET_START_DATE } from './eventConstants';\nconst initialState = {\n  events: [],\n  comments: [],\n  moreEvents: true,\n  selectedEvent: null,\n  lastVisible: null,\n  filter: 'all',\n  startDate: new Date(),\n  retainState: false\n};\nexport default function eventReducer(state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case CREATE_EVENT:\n      return { ...state,\n        events: [...state.events, payload]\n      };\n\n    case UPDATE_EVENT:\n      return { ...state,\n        events: [...state.events.filter(evt => evt.id !== payload.id), payload]\n      };\n\n    case DELETE_EVENT:\n      return { ...state,\n        events: [...state.events.filter(evt => evt.id !== payload)]\n      };\n\n    case FETCH_EVENTS:\n      return { ...state,\n        events: [...state.events, ...payload.events],\n        moreEvents: payload.moreEvents,\n        lastVisible: payload.lastVisible\n      };\n\n    case LISTEN_TO_EVENT_CHAT:\n      return { ...state,\n        comments: payload\n      };\n\n    case CLEAR_COMMENTS:\n      return { ...state,\n        comments: []\n      };\n\n    case LISTEN_TO_SELECTED_EVENT:\n      return { ...state,\n        selectedEvent: payload\n      };\n\n    case CLEAR_EVENTS:\n      return { ...state,\n        events: [],\n        moreEvents: true\n      };\n\n    case SET_FILTER:\n      return { ...state,\n        retainState: false,\n        moreEvents: true,\n        filter: payload\n      };\n\n    case SET_START_DATE:\n      return { ...state,\n        retainState: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/cvetan/Documents/AKTUELNO/PrevozSemanticUI/prevoz-cist/src/features/events/eventReducer.js"],"names":["CREATE_EVENT","UPDATE_EVENT","DELETE_EVENT","FETCH_EVENTS","LISTEN_TO_EVENT_CHAT","CLEAR_COMMENTS","LISTEN_TO_SELECTED_EVENT","CLEAR_EVENTS","SET_FILTER","SET_START_DATE","initialState","events","comments","moreEvents","selectedEvent","lastVisible","filter","startDate","Date","retainState","eventReducer","state","type","payload","evt","id"],"mappings":"AAAA,SACEA,YADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,oBALF,EAMEC,cANF,EAOEC,wBAPF,EAQEC,YARF,EASEC,UATF,EAUEC,cAVF,QAWO,kBAXP;AAaA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,UAAU,EAAE,IAHO;AAInBC,EAAAA,aAAa,EAAE,IAJI;AAKnBC,EAAAA,WAAW,EAAE,IALM;AAMnBC,EAAAA,MAAM,EAAE,KANW;AAOnBC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,EAPQ;AAQnBC,EAAAA,WAAW,EAAE;AARM,CAArB;AAWA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGX,YAA9B,EAA4C;AAAEY,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA5C,EAA+D;AAC5E,UAAQD,IAAR;AACE,SAAKtB,YAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAELV,QAAAA,MAAM,EAAE,CAAC,GAAGU,KAAK,CAACV,MAAV,EAAkBY,OAAlB;AAFH,OAAP;;AAIF,SAAKtB,YAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELV,QAAAA,MAAM,EAAE,CACN,GAAGU,KAAK,CAACV,MAAN,CAAaK,MAAb,CAAqBQ,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWF,OAAO,CAACE,EAAhD,CADG,EAENF,OAFM;AAFH,OAAP;;AAOF,SAAKrB,YAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELV,QAAAA,MAAM,EAAE,CAAC,GAAGU,KAAK,CAACV,MAAN,CAAaK,MAAb,CAAqBQ,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWF,OAAxC,CAAJ;AAFH,OAAP;;AAIF,SAAKpB,YAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELV,QAAAA,MAAM,EAAE,CAAC,GAAGU,KAAK,CAACV,MAAV,EAAkB,GAAGY,OAAO,CAACZ,MAA7B,CAFH;AAGLE,QAAAA,UAAU,EAAEU,OAAO,CAACV,UAHf;AAILE,QAAAA,WAAW,EAAEQ,OAAO,CAACR;AAJhB,OAAP;;AAMF,SAAKX,oBAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELT,QAAAA,QAAQ,EAAEW;AAFL,OAAP;;AAIF,SAAKlB,cAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELT,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF,SAAKN,wBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELP,QAAAA,aAAa,EAAES;AAFV,OAAP;;AAIF,SAAKhB,YAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELV,QAAAA,MAAM,EAAE,EAFH;AAGLE,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKA,SAAKL,UAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELF,QAAAA,WAAW,EAAE,KAFR;AAGLN,QAAAA,UAAU,EAAE,IAHP;AAILG,QAAAA,MAAM,EAAEO;AAJH,OAAP;;AAMA,SAAKd,cAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELF,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAON;AACE,aAAOE,KAAP;AA/DJ;AAiED","sourcesContent":["import {\n  CREATE_EVENT,\n  UPDATE_EVENT,\n  DELETE_EVENT,\n  FETCH_EVENTS,\n  LISTEN_TO_EVENT_CHAT,\n  CLEAR_COMMENTS,\n  LISTEN_TO_SELECTED_EVENT,\n  CLEAR_EVENTS,\n  SET_FILTER,\n  SET_START_DATE,\n} from './eventConstants';\n\nconst initialState = {\n  events: [],\n  comments: [],\n  moreEvents: true,\n  selectedEvent: null,\n  lastVisible: null,\n  filter: 'all',\n  startDate: new Date(),\n  retainState: false\n};\n\nexport default function eventReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case CREATE_EVENT:\n      return {\n        ...state,\n        events: [...state.events, payload],\n      };\n    case UPDATE_EVENT:\n      return {\n        ...state,\n        events: [\n          ...state.events.filter((evt) => evt.id !== payload.id),\n          payload,\n        ],\n      };\n    case DELETE_EVENT:\n      return {\n        ...state,\n        events: [...state.events.filter((evt) => evt.id !== payload)],\n      };\n    case FETCH_EVENTS:\n      return {\n        ...state,\n        events: [...state.events, ...payload.events],\n        moreEvents: payload.moreEvents,\n        lastVisible: payload.lastVisible\n      };\n    case LISTEN_TO_EVENT_CHAT:\n      return {\n        ...state,\n        comments: payload,\n      };\n    case CLEAR_COMMENTS:\n      return {\n        ...state,\n        comments: [],\n      };\n    case LISTEN_TO_SELECTED_EVENT:\n      return {\n        ...state,\n        selectedEvent: payload,\n      };\n    case CLEAR_EVENTS:\n      return {\n        ...state,\n        events: [],\n        moreEvents: true,\n      };\n      case SET_FILTER:\n        return {\n          ...state, \n          retainState: false, \n          moreEvents: true, \n          filter: payload\n        }\n        case SET_START_DATE:\n          return {\n            ...state, \n            retainState: false, \n            \n\n          }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}