{"ast":null,"code":"var _jsxFileName = \"/home/cvetan/Documents/AKTUELNO/revents-master-14/cista/revents-4a7a2c1fc0de9971a68b4bb68ad6fa71370a6c80/src/app/common/photos/PhotoWidgetDropzone.jsx\";\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Icon, Header } from 'semantic-ui-react';\nexport default function PhotoWidgetDropzone({\n  setFiles\n}) {\n  const dropzoneStyles = {\n    border: 'dashed 3px #eee',\n    borderRadius: '5%',\n    paddingTop: '30px',\n    textAlign: 'center'\n  };\n  const dropzoneActive = {\n    border: 'dashed 3px green'\n  };\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  }, [setFiles]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    style: isDragActive ? { ...dropzoneStyles,\n      ...dropzoneActive\n    } : dropzoneStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Icon, {\n    name: \"upload\",\n    size: \"huge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    content: \"Drop image here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/cvetan/Documents/AKTUELNO/revents-master-14/cista/revents-4a7a2c1fc0de9971a68b4bb68ad6fa71370a6c80/src/app/common/photos/PhotoWidgetDropzone.jsx"],"names":["React","useCallback","useDropzone","Icon","Header","PhotoWidgetDropzone","setFiles","dropzoneStyles","border","borderRadius","paddingTop","textAlign","dropzoneActive","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AAEA,eAAe,SAASC,mBAAT,CAA6B;AAACC,EAAAA;AAAD,CAA7B,EAAyC;AACvD,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,iBADW;AAEnBC,IAAAA,YAAY,EAAE,IAFK;AAGnBC,IAAAA,UAAU,EAAE,MAHO;AAInBC,IAAAA,SAAS,EAAE;AAJQ,GAAvB;AAOA,QAAMC,cAAc,GAAG;AACnBJ,IAAAA,MAAM,EAAE;AADW,GAAvB;AAIC,QAAMK,MAAM,GAAGZ,WAAW,CAACa,aAAa,IAAI;AAC1CR,IAAAA,QAAQ,CAACQ,aAAa,CAACC,GAAd,CAAkBC,IAAI,IAAIC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB;AACnDG,MAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,IAApB;AAD0C,KAApB,CAA1B,CAAD,CAAR;AAGD,GAJyB,EAIvB,CAACV,QAAD,CAJuB,CAA1B;AAKA,QAAM;AAACgB,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA8BC,IAAAA;AAA9B,MAA8CtB,WAAW,CAAC;AAACW,IAAAA;AAAD,GAAD,CAA/D;AAEA,sBACE,6CAASS,YAAY,EAArB;AAAyB,IAAA,KAAK,EAAEE,YAAY,GAAG,EAAC,GAAGjB,cAAJ;AAAoB,SAAGK;AAAvB,KAAH,GAA4CL,cAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,+CAAWgB,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD","sourcesContent":["import React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport { Icon, Header } from 'semantic-ui-react'\n\nexport default function PhotoWidgetDropzone({setFiles}) {\n const dropzoneStyles = {\n     border: 'dashed 3px #eee',\n     borderRadius: '5%',\n     paddingTop: '30px',\n     textAlign: 'center'\n }\n\n const dropzoneActive = {\n     border: 'dashed 3px green'\n }\n\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n    })))\n  }, [setFiles])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()} style={isDragActive ? {...dropzoneStyles, ...dropzoneActive} : dropzoneStyles}>\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge' />\n      <Header content='Drop image here' />\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}