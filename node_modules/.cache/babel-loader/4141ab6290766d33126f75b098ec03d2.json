{"ast":null,"code":"var _jsxFileName = \"/home/cvetan/Documents/AKTUELNO/revents-master-14/cista/revents-4a7a2c1fc0de9971a68b4bb68ad6fa71370a6c80/src/features/events/eventForm/EventForm.jsx\";\n\n/* global google */\nimport React, { useState } from 'react';\nimport { Segment, Header, Button, Confirm } from 'semantic-ui-react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listenToEvents } from '../eventActions';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport MyTextInput from '../../../app/common/form/MyTextInput';\nimport MyTextArea from '../../../app/common/form/MyTextArea';\nimport MySelectInput from '../../../app/common/form/MySelectInput';\nimport { categoryData } from '../../../app/api/categoryOptions';\nimport MyDateInput from '../../../app/common/form/MyDateInput';\nimport MyPlaceInput from '../../../app/common/form/MyPlaceInput';\nimport { listenToEventFromFirestore, updateEventInFirestore, addEventToFirestore, cancelEventToggle } from '../../../app/firestore/firestoreService';\nimport useFirestoreDoc from '../../../app/hooks/useFirestoreDoc';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { toast } from 'react-toastify';\nexport default function EventForm({\n  match,\n  history\n}) {\n  const dispatch = useDispatch();\n  const [loadingCancel, setLoadingCancel] = useState(false);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const selectedEvent = useSelector(state => state.event.events.find(e => e.id === match.params.id));\n  const {\n    loading,\n    error\n  } = useSelector(state => state.async);\n  const initialValues = selectedEvent !== null && selectedEvent !== void 0 ? selectedEvent : {\n    title: '',\n    category: '',\n    description: '',\n    city: {\n      address: '',\n      latLng: null\n    },\n    venue: {\n      address: '',\n      latLng: null\n    },\n    date: ''\n  };\n  const validationSchema = Yup.object({\n    title: Yup.string().required('You must provide a title'),\n    category: Yup.string().required('You must provide a category'),\n    description: Yup.string().required(),\n    city: Yup.object().shape({\n      address: Yup.string().required('City is required')\n    }),\n    venue: Yup.object().shape({\n      address: Yup.string().required('Venue is required')\n    }),\n    date: Yup.string().required()\n  });\n\n  async function handleCancelToggle(event) {\n    setConfirmOpen(false);\n    setLoadingCancel(true);\n\n    try {\n      await cancelEventToggle(event);\n      setLoadingCancel(false);\n    } catch (error) {\n      setLoadingCancel(true);\n      toast.error(error.message);\n    }\n  }\n\n  useFirestoreDoc({\n    shouldExecute: !!match.params.id,\n    query: () => listenToEventFromFirestore(match.params.id),\n    data: event => dispatch(listenToEvents([event])),\n    deps: [match.params.id, dispatch]\n  });\n  if (loading) return /*#__PURE__*/React.createElement(LoadingComponent, {\n    content: \"Loading event...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  });\n  return /*#__PURE__*/React.createElement(Segment, {\n    clearing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, {\n      setSubmitting\n    }) => {\n      try {\n        selectedEvent ? await updateEventInFirestore(values) : await addEventToFirestore(values);\n        setSubmitting(false);\n        history.push('/events');\n      } catch (error) {\n        toast.error(error.message);\n        setSubmitting(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting,\n    dirty,\n    isValid,\n    values\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    sub: true,\n    color: \"teal\",\n    content: \"Event Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MyTextInput, {\n    name: \"title\",\n    placeholder: \"Event title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MySelectInput, {\n    name: \"category\",\n    placeholder: \"Event category\",\n    options: categoryData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MyTextArea, {\n    name: \"description\",\n    placeholder: \"Description\",\n    rows: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    sub: true,\n    color: \"teal\",\n    content: \"Event Location Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MyPlaceInput, {\n    name: \"city\",\n    placeholder: \"City\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MyPlaceInput, {\n    name: \"venue\",\n    disabled: !values.city.latLng,\n    placeholder: \"Venue\",\n    options: {\n      location: new google.maps.LatLng(values.city.latLng),\n      radius: 1000,\n      types: ['establishment']\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MyDateInput, {\n    name: \"date\",\n    placeholderText: \"Event date\",\n    timeFormat: \"HH:mm\",\n    showTimeSelect: true,\n    timeCaption: \"time\",\n    dateFormat: \"MMMM d, yyyy h:mm a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), selectedEvent && /*#__PURE__*/React.createElement(Button, {\n    loading: loadingCancel,\n    type: \"button\",\n    floated: \"left\",\n    color: selectedEvent.isCancelled ? 'green' : 'red',\n    content: selectedEvent.isCancelled ? 'Reactivate event' : 'Cancel Event',\n    onClick: () => setConfirmOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    loading: isSubmitting,\n    disabled: !isValid || !dirty || isSubmitting,\n    type: \"submit\",\n    floated: \"right\",\n    positive: true,\n    content: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    as: Link,\n    to: \"/events\",\n    type: \"submit\",\n    floated: \"right\",\n    content: \"Cancel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Confirm, {\n    content: (selectedEvent === null || selectedEvent === void 0 ? void 0 : selectedEvent.isCancelled) ? 'This will reactivate the event - are you sure?' : 'This will cancel the event - are you sure?',\n    open: confirmOpen,\n    onCancel: () => setConfirmOpen(false),\n    onConfirm: () => handleCancelToggle(selectedEvent),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/cvetan/Documents/AKTUELNO/revents-master-14/cista/revents-4a7a2c1fc0de9971a68b4bb68ad6fa71370a6c80/src/features/events/eventForm/EventForm.jsx"],"names":["React","useState","Segment","Header","Button","Confirm","Link","Redirect","useSelector","useDispatch","listenToEvents","Formik","Form","Yup","MyTextInput","MyTextArea","MySelectInput","categoryData","MyDateInput","MyPlaceInput","listenToEventFromFirestore","updateEventInFirestore","addEventToFirestore","cancelEventToggle","useFirestoreDoc","LoadingComponent","toast","EventForm","match","history","dispatch","loadingCancel","setLoadingCancel","confirmOpen","setConfirmOpen","selectedEvent","state","event","events","find","e","id","params","loading","error","async","initialValues","title","category","description","city","address","latLng","venue","date","validationSchema","object","string","required","shape","handleCancelToggle","message","shouldExecute","query","data","deps","values","setSubmitting","push","isSubmitting","dirty","isValid","location","google","maps","LatLng","radius","types","isCancelled"],"mappings":"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","sourcesContent":["/* global google */\nimport React, { useState } from 'react';\nimport { Segment, Header, Button, Confirm } from 'semantic-ui-react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listenToEvents } from '../eventActions';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport MyTextInput from '../../../app/common/form/MyTextInput';\nimport MyTextArea from '../../../app/common/form/MyTextArea';\nimport MySelectInput from '../../../app/common/form/MySelectInput';\nimport { categoryData } from '../../../app/api/categoryOptions';\nimport MyDateInput from '../../../app/common/form/MyDateInput';\nimport MyPlaceInput from '../../../app/common/form/MyPlaceInput';\nimport {\n  listenToEventFromFirestore,\n  updateEventInFirestore,\n  addEventToFirestore,\n  cancelEventToggle,\n} from '../../../app/firestore/firestoreService';\nimport useFirestoreDoc from '../../../app/hooks/useFirestoreDoc';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { toast } from 'react-toastify';\n\nexport default function EventForm({ match, history }) {\n  const dispatch = useDispatch();\n  const [loadingCancel, setLoadingCancel] = useState(false);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const selectedEvent = useSelector((state) =>\n    state.event.events.find((e) => e.id === match.params.id)\n  );\n  const { loading, error } = useSelector((state) => state.async);\n\n  const initialValues = selectedEvent ?? {\n    title: '',\n    category: '',\n    description: '',\n    city: {\n      address: '',\n      latLng: null,\n    },\n    venue: {\n      address: '',\n      latLng: null,\n    },\n    date: '',\n  };\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required('You must provide a title'),\n    category: Yup.string().required('You must provide a category'),\n    description: Yup.string().required(),\n    city: Yup.object().shape({\n      address: Yup.string().required('City is required'),\n    }),\n    venue: Yup.object().shape({\n      address: Yup.string().required('Venue is required'),\n    }),\n    date: Yup.string().required(),\n  });\n\n  async function handleCancelToggle(event) {\n    setConfirmOpen(false);\n    setLoadingCancel(true);\n    try {\n      await cancelEventToggle(event);\n      setLoadingCancel(false);\n    } catch (error) {\n      setLoadingCancel(true);\n      toast.error(error.message);\n    }\n  }\n\n\n  useFirestoreDoc({\n    shouldExecute: !!match.params.id,\n    query: () => listenToEventFromFirestore(match.params.id),\n    data: (event) => dispatch(listenToEvents([event])),\n    deps: [match.params.id, dispatch],\n  });\n\n  if (loading)\n    return <LoadingComponent content='Loading event...' />;\n\n  if (error) return <Redirect to='/error' />;\n\n  return (\n    <Segment clearing>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={async (values, { setSubmitting }) => {\n          try {\n            selectedEvent\n              ? await updateEventInFirestore(values)\n              : await addEventToFirestore(values);\n              setSubmitting(false);\n            history.push('/events');\n          } catch (error) {\n            toast.error(error.message);\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, dirty, isValid, values }) => (\n          <Form className='ui form'>\n            <Header sub color='teal' content='Event Details' />\n            <MyTextInput name='title' placeholder='Event title' />\n            <MySelectInput\n              name='category'\n              placeholder='Event category'\n              options={categoryData}\n            />\n            <MyTextArea name='description' placeholder='Description' rows={3} />\n            <Header sub color='teal' content='Event Location Details' />\n            <MyPlaceInput name='city' placeholder='City' />\n            <MyPlaceInput\n              name='venue'\n              disabled={!values.city.latLng}\n              placeholder='Venue'\n              options={{\n                location: new google.maps.LatLng(values.city.latLng),\n                radius: 1000,\n                types: ['establishment'],\n              }}\n            />\n            <MyDateInput\n              name='date'\n              placeholderText='Event date'\n              timeFormat='HH:mm'\n              showTimeSelect\n              timeCaption='time'\n              dateFormat='MMMM d, yyyy h:mm a'\n            />\n            {selectedEvent &&\n            <Button\n              loading={loadingCancel}\n              type='button'\n              floated='left'\n              color={selectedEvent.isCancelled ? 'green' : 'red'}\n              content={selectedEvent.isCancelled ? 'Reactivate event' : 'Cancel Event'}\n              onClick={() => setConfirmOpen(true)}\n            />}\n            <Button\n              loading={isSubmitting}\n              disabled={!isValid || !dirty || isSubmitting}\n              type='submit'\n              floated='right'\n              positive\n              content='Submit'\n            />\n            <Button\n              disabled={isSubmitting}\n              as={Link}\n              to='/events'\n              type='submit'\n              floated='right'\n              content='Cancel'\n            />\n          </Form>\n        )}\n      </Formik>\n      <Confirm \n        content={selectedEvent?.isCancelled ? 'This will reactivate the event - are you sure?' : 'This will cancel the event - are you sure?'}\n        open={confirmOpen}\n        onCancel={() => setConfirmOpen(false)}\n        onConfirm={() => handleCancelToggle(selectedEvent)}\n      />\n    </Segment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}