{"ast":null,"code":"var _jsxFileName = \"/home/cvetan/Documents/AKTUELNO/revents-master-14/cista/revents-4a7a2c1fc0de9971a68b4bb68ad6fa71370a6c80/src/features/profiles/profilePage/EventsTab.jsx\";\nimport React, { useState } from 'react';\nimport { Grid, Header, Tab, Card, Image } from 'semantic-ui-react';\nimport { format } from 'date-fns';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useFirestoreCollection from '../../../app/hooks/useFirestoreCollection';\nimport { getUserEventsQuery } from '../../../app/firestore/firestoreService';\nimport { listenToUserEvents } from '../profileActions';\nexport default function EventsTab({\n  profile\n}) {\n  const dispatch = useDispatch();\n  const [activeTab, setActiveTab] = useState(0);\n  const {\n    profileEvents\n  } = useSelector(state => state.profile);\n  const {\n    loading\n  } = useSelector(state => state.async);\n  useFirestoreCollection({\n    query: () => getUserEventsQuery(activeTab, profile.id),\n    data: events => dispatch(listenToUserEvents(events)),\n    deps: [dispatch, activeTab, profile.id]\n  });\n  const panes = [{\n    menuItem: 'Future Events',\n    pane: {\n      key: 'future'\n    }\n  }, {\n    menuItem: 'Past Events',\n    pane: {\n      key: 'past'\n    }\n  }, {\n    menuItem: 'Hosting',\n    pane: {\n      key: 'hosting'\n    }\n  }];\n  return /*#__PURE__*/React.createElement(Tab.Pane, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    floated: \"left\",\n    icon: \"calendar\",\n    content: \"Events\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    onTabChange: (e, data) => setActiveTab(data.activeIndex),\n    panes: panes,\n    menu: {\n      secondary: true,\n      pointing: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Card.Group, {\n    itemsPerRow: 5,\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, profileEvents.map(event => /*#__PURE__*/React.createElement(Card, {\n    as: Link,\n    to: `/events/${event.id}`,\n    key: event.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: `/assets/categoryImages/${event.category}.jpg`,\n    style: {\n      minHeight: 100,\n      objectFit: 'cover'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    content: event.title,\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Card.Meta, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, format(event.date, 'dd MMM yyyy')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, format(event.date, 'hh:mm a'))))))))));\n}","map":{"version":3,"sources":["/home/cvetan/Documents/AKTUELNO/revents-master-14/cista/revents-4a7a2c1fc0de9971a68b4bb68ad6fa71370a6c80/src/features/profiles/profilePage/EventsTab.jsx"],"names":["React","useState","Grid","Header","Tab","Card","Image","format","Link","useSelector","useDispatch","useFirestoreCollection","getUserEventsQuery","listenToUserEvents","EventsTab","profile","dispatch","activeTab","setActiveTab","profileEvents","state","loading","async","query","id","data","events","deps","panes","menuItem","pane","key","e","activeIndex","secondary","pointing","marginTop","map","event","category","minHeight","objectFit","title","date"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Grid, Header, Tab, Card, Image } from 'semantic-ui-react';\nimport { format } from 'date-fns';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useFirestoreCollection from '../../../app/hooks/useFirestoreCollection';\nimport { getUserEventsQuery } from '../../../app/firestore/firestoreService';\nimport { listenToUserEvents } from '../profileActions';\n\nexport default function EventsTab({ profile }) {\n  const dispatch = useDispatch();\n  const [activeTab, setActiveTab] = useState(0);\n  const { profileEvents } = useSelector((state) => state.profile);\n  const { loading } = useSelector((state) => state.async);\n\n  useFirestoreCollection({\n    query: () => getUserEventsQuery(activeTab, profile.id),\n    data: (events) => dispatch(listenToUserEvents(events)),\n    deps: [dispatch, activeTab, profile.id],\n  });\n\n  const panes = [\n    { menuItem: 'Future Events', pane: { key: 'future' } },\n    { menuItem: 'Past Events', pane: { key: 'past' } },\n    { menuItem: 'Hosting', pane: { key: 'hosting' } },\n  ];\n  return (\n    <Tab.Pane loading={loading}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated='left' icon='calendar' content='Events' />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            onTabChange={(e, data) => setActiveTab(data.activeIndex)}\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n          />\n          <Card.Group itemsPerRow={5} style={{ marginTop: 10 }}>\n            {profileEvents.map((event) => (\n              <Card as={Link} to={`/events/${event.id}`} key={event.id}>\n                <Image\n                  src={`/assets/categoryImages/${event.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: 'cover' }}\n                />\n                <Card.Content>\n                  <Card.Header content={event.title} textAlign='center' />\n                  <Card.Meta textAlign='center'>\n                    <div>{format(event.date, 'dd MMM yyyy')}</div>\n                    <div>{format(event.date, 'hh:mm a')}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}