{"ast":null,"code":"var _jsxFileName = \"/home/cvetan/Documents/AKTUELNO/revents-master-14/cista/revents-4a7a2c1fc0de9971a68b4bb68ad6fa71370a6c80/src/features/auth/RegisterForm.jsx\";\nimport React from 'react';\nimport ModalWrapper from '../../app/common/modals/ModalWrapper';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { Button, Label, Divider } from 'semantic-ui-react';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from '../../app/common/modals/modalReducer';\nimport { registerInFirebase } from '../../app/firestore/firebaseService';\nimport SocialLogin from './SocialLogin';\nexport default function RegisterForm() {\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(ModalWrapper, {\n    size: \"mini\",\n    header: \"Register to Re-vents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      displayName: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      displayName: Yup.string().required(),\n      email: Yup.string().required().email(),\n      password: Yup.string().required()\n    }),\n    onSubmit: async (values, {\n      setSubmitting,\n      setErrors\n    }) => {\n      try {\n        await registerInFirebase(values);\n        setSubmitting(false);\n        dispatch(closeModal());\n      } catch (error) {\n        setErrors({\n          auth: error.message\n        });\n        setSubmitting(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, ({\n    isSubmitting,\n    isValid,\n    dirty,\n    errors\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MyTextInput, {\n    name: \"displayName\",\n    placeholder: \"DisplayName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(MyTextInput, {\n    name: \"email\",\n    placeholder: \"Email Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(MyTextInput, {\n    name: \"password\",\n    placeholder: \"Password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }), errors.auth && /*#__PURE__*/React.createElement(Label, {\n    basic: true,\n    color: \"red\",\n    style: {\n      marginBottom: 10\n    },\n    content: errors.auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    loading: isSubmitting,\n    disabled: !isValid || !dirty || isSubmitting,\n    type: \"submit\",\n    fluid: true,\n    size: \"large\",\n    color: \"teal\",\n    content: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    horizontal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"Or\"), /*#__PURE__*/React.createElement(SocialLogin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/cvetan/Documents/AKTUELNO/revents-master-14/cista/revents-4a7a2c1fc0de9971a68b4bb68ad6fa71370a6c80/src/features/auth/RegisterForm.jsx"],"names":["React","ModalWrapper","Formik","Form","Yup","MyTextInput","Button","Label","Divider","useDispatch","closeModal","registerInFirebase","SocialLogin","RegisterForm","dispatch","displayName","email","password","object","string","required","values","setSubmitting","setErrors","error","auth","message","isSubmitting","isValid","dirty","errors","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ModalWrapper from '../../app/common/modals/ModalWrapper';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { Button, Label, Divider } from 'semantic-ui-react';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from '../../app/common/modals/modalReducer';\nimport { registerInFirebase } from '../../app/firestore/firebaseService';\nimport SocialLogin from './SocialLogin';\n\nexport default function RegisterForm() {\n    const dispatch = useDispatch();\n\n    return (\n        <ModalWrapper size='mini' header='Register to Re-vents'>\n            <Formik\n                initialValues={{displayName: '', email: '', password: ''}}\n                validationSchema={Yup.object({\n                    displayName: Yup.string().required(),\n                    email: Yup.string().required().email(),\n                    password: Yup.string().required()\n                })}\n                onSubmit={async (values, {setSubmitting, setErrors}) => {\n                    try {\n                        await registerInFirebase(values);\n                        setSubmitting(false);\n                        dispatch(closeModal());\n                    } catch (error) {\n                        setErrors({auth: error.message});\n                        setSubmitting(false);\n                    }\n                }}\n            >\n                {({isSubmitting, isValid, dirty, errors}) => (\n                    <Form className='ui form'>\n                        <MyTextInput name='displayName' placeholder='DisplayName' />\n                        <MyTextInput name='email' placeholder='Email Address' />\n                        <MyTextInput name='password' placeholder='Password' type='password' />\n                        {errors.auth && <Label basic color='red' style={{marginBottom: 10}} content={errors.auth} />}\n                        <Button \n                            loading={isSubmitting}\n                            disabled={!isValid || !dirty || isSubmitting}\n                            type='submit'\n                            fluid\n                            size='large'\n                            color='teal'\n                            content='Register'\n                        />\n                        <Divider horizontal>Or</Divider>\n                        <SocialLogin />\n                    </Form>\n                )}\n            </Formik>\n        </ModalWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}