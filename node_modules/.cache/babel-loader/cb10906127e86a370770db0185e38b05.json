{"ast":null,"code":"import { CREATE_EVENT, UPDATE_EVENT, DELETE_EVENT, FETCH_EVENTS, LISTEN_TO_EVENT_CHAT, CLEAR_COMMENTS } from './eventConstants';\nconst initialState = {\n  events: [],\n  comments: []\n};\nexport default function eventReducer(state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case CREATE_EVENT:\n      return { ...state,\n        events: [...state.events, payload]\n      };\n\n    case UPDATE_EVENT:\n      return { ...state,\n        events: [...state.events.filter(evt => evt.id !== payload.id), payload]\n      };\n\n    case DELETE_EVENT:\n      return { ...state,\n        events: [...state.events.filter(evt => evt.id !== payload)]\n      };\n\n    case FETCH_EVENTS:\n      return { ...state,\n        events: payload.events,\n        moreEvents\n      };\n\n    case LISTEN_TO_EVENT_CHAT:\n      return { ...state,\n        comments: payload\n      };\n\n    case CLEAR_COMMENTS:\n      return { ...state,\n        comments: []\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/cvetan/Documents/AKTUELNO/PrevozSemanticUI/prevoz-cist/src/features/events/eventReducer.js"],"names":["CREATE_EVENT","UPDATE_EVENT","DELETE_EVENT","FETCH_EVENTS","LISTEN_TO_EVENT_CHAT","CLEAR_COMMENTS","initialState","events","comments","eventReducer","state","type","payload","filter","evt","id","moreEvents"],"mappings":"AAAA,SACEA,YADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,oBALF,EAMEC,cANF,QAOO,kBAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;AAKA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGJ,YAA9B,EAA4C;AAAEK,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA5C,EAA+D;AAC5E,UAAQD,IAAR;AACE,SAAKX,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBK,OAAlB;AAFH,OAAP;;AAIF,SAAKX,YAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,MAAM,EAAE,CACN,GAAGG,KAAK,CAACH,MAAN,CAAaM,MAAb,CAAqBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWH,OAAO,CAACG,EAAhD,CADG,EAENH,OAFM;AAFH,OAAP;;AAOF,SAAKV,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAN,CAAaM,MAAb,CAAqBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWH,OAAxC,CAAJ;AAFH,OAAP;;AAIF,SAAKT,YAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,MAAM,EAAEK,OAAO,CAACL,MAFX;AAGLS,QAAAA;AAHK,OAAP;;AAKF,SAAKZ,oBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,QAAQ,EAAEI;AAFL,OAAP;;AAIA,SAAKP,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAMJ;AACE,aAAOE,KAAP;AAtCJ;AAwCD","sourcesContent":["import {\n  CREATE_EVENT,\n  UPDATE_EVENT,\n  DELETE_EVENT,\n  FETCH_EVENTS,\n  LISTEN_TO_EVENT_CHAT,\n  CLEAR_COMMENTS,\n} from './eventConstants';\n\nconst initialState = {\n  events: [],\n  comments: [],\n};\n\nexport default function eventReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case CREATE_EVENT:\n      return {\n        ...state,\n        events: [...state.events, payload],\n      };\n    case UPDATE_EVENT:\n      return {\n        ...state,\n        events: [\n          ...state.events.filter((evt) => evt.id !== payload.id),\n          payload,\n        ],\n      };\n    case DELETE_EVENT:\n      return {\n        ...state,\n        events: [...state.events.filter((evt) => evt.id !== payload)],\n      };\n    case FETCH_EVENTS:\n      return {\n        ...state,\n        events: payload.events,\n        moreEvents\n      };\n    case LISTEN_TO_EVENT_CHAT:\n      return {\n        ...state,\n        comments: payload,\n      };\n      case CLEAR_COMMENTS:\n        return {\n          ...state, \n          comments: []\n\n        }\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}