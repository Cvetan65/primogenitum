{"ast":null,"code":"var _jsxFileName = \"/home/cvetan/Documents/AKTUELNO/PrevozSemanticUI/prevoz-cist/src/features/events/eventDetailed/EventDetailedChatForm.jsx\";\nimport { Form, Formik } from 'formik';\nimport React from 'react';\nimport { addEventChatComment } from '../../../app/firestore/firebaseService';\nimport MyTextArea from '../../../app/common/form/MyTextArea';\nimport { Button } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nexport default function EventDetailedChatForm(eventId) {\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      comment: ''\n    },\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      try {\n        await addEventChatComment(eventId, values.comment);\n        resetForm();\n      } catch (error) {\n        console.log(error);\n        toast.error(error.message);\n      } finally {\n        setSubmitting(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, ({\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MyTextArea, {\n    name: \"comment\",\n    placeholder: \"\\u0421\\u0442\\u0430\\u0432\\u0435\\u0442\\u0435 \\u0412\\u0430\\u0448 \\u043A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440 \\u0442\\u0443\\u043A\\u0430\",\n    rows: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    loading: isSubmitting,\n    content: \"Add reply\",\n    icon: \"edit\",\n    primary: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/home/cvetan/Documents/AKTUELNO/PrevozSemanticUI/prevoz-cist/src/features/events/eventDetailed/EventDetailedChatForm.jsx"],"names":["Form","Formik","React","addEventChatComment","MyTextArea","Button","toast","EventDetailedChatForm","eventId","comment","values","setSubmitting","resetForm","error","console","log","message","isSubmitting"],"mappings":";AAAA,SAASA,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,wCAApC;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,eAAe,SAASC,qBAAT,CAA+BC,OAA/B,EAAwC;AACrD,sBACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADjB;AAEE,IAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAf,KAAgD;AACxD,UAAI;AACF,cAAMT,mBAAmB,CAACK,OAAD,EAAUE,MAAM,CAACD,OAAjB,CAAzB;AACAG,QAAAA,SAAS;AACV,OAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACFP,QAAAA,KAAK,CAACO,KAAN,CAAYA,KAAK,CAACG,OAAlB;AACD,OAND,SAMU;AACRL,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcG,CAAC;AAAEM,IAAAA;AAAF,GAAD,kBACC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,WAAW,EAAC,yIAFd;AAGE,IAAA,IAAI,EAAE,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEA,YADX;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,OAAO,MAJT;AAKE,IAAA,IAAI,EAAC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAfJ,CADF;AAiCD","sourcesContent":["import { Form, Formik } from 'formik';\nimport React from 'react';\nimport { addEventChatComment } from '../../../app/firestore/firebaseService';\nimport MyTextArea from '../../../app/common/form/MyTextArea';\nimport { Button } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\n\nexport default function EventDetailedChatForm(eventId) {\n  return (\n    <Formik\n      initialValues={{ comment: '' }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        try {\n          await addEventChatComment(eventId, values.comment);\n          resetForm();\n        } catch (error) {\n            console.log(error);\n          toast.error(error.message);\n        } finally {\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Form className='ui form'>\n          <MyTextArea\n            name='comment'\n            placeholder='Ставете Ваш коментар тука'\n            rows={2}\n          />\n          <Button\n            loading={isSubmitting}\n            content='Add reply'\n            icon='edit'\n            primary\n            type='submit'\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}