{"ast":null,"code":"var _jsxFileName = \"/home/cvetan/Documents/AKTUELNO/PrevozSemanticUI/prevoz-cist/src/features/auth/LoginForm.jsx\";\nimport React from 'react';\nimport ModalWrapper from '../../app/common/modals/ModalWrapper';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { Button, Label, Divider } from 'semantic-ui-react';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from '../../app/common/modals/modalReducer';\nimport { signInWithEmail } from '../../app/firestore/firebaseService';\nimport SocialLogin from './SocialLogin';\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(ModalWrapper, {\n    size: \"mini\",\n    header: \"Sign in to Re-vents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().required().email(),\n      password: Yup.string().required()\n    }),\n    onSubmit: async (values, {\n      setSubmitting,\n      setErrors\n    }) => {\n      try {\n        await signInWithEmail(values);\n        setSubmitting(false);\n        dispatch(closeModal());\n      } catch (error) {\n        setErrors({\n          auth: 'Problem with username or password'\n        });\n        setSubmitting(false);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, ({\n    isSubmitting,\n    isValid,\n    dirty,\n    errors\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MyTextInput, {\n    name: \"email\",\n    placeholder: \"Email Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(MyTextInput, {\n    name: \"password\",\n    placeholder: \"Password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }), errors.auth && /*#__PURE__*/React.createElement(Label, {\n    basic: true,\n    color: \"red\",\n    style: {\n      marginBottom: 10\n    },\n    content: errors.auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    loading: isSubmitting,\n    disabled: !isValid || !dirty || isSubmitting,\n    type: \"submit\",\n    fluid: true,\n    size: \"large\",\n    color: \"teal\",\n    content: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    horizontal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"Or\"), /*#__PURE__*/React.createElement(SocialLogin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/cvetan/Documents/AKTUELNO/PrevozSemanticUI/prevoz-cist/src/features/auth/LoginForm.jsx"],"names":["React","ModalWrapper","Formik","Form","Yup","MyTextInput","Button","Label","Divider","useDispatch","closeModal","signInWithEmail","SocialLogin","LoginForm","dispatch","email","password","object","string","required","values","setSubmitting","setErrors","error","auth","isSubmitting","isValid","dirty","errors","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ModalWrapper from '../../app/common/modals/ModalWrapper';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport MyTextInput from '../../app/common/form/MyTextInput';\nimport { Button, Label, Divider } from 'semantic-ui-react';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from '../../app/common/modals/modalReducer';\nimport { signInWithEmail } from '../../app/firestore/firebaseService';\nimport SocialLogin from './SocialLogin';\n\nexport default function LoginForm() {\n    const dispatch = useDispatch();\n\n    return (\n        <ModalWrapper size='mini' header='Sign in to Re-vents'>\n            <Formik\n                initialValues={{email: '', password: ''}}\n                validationSchema={Yup.object({\n                    email: Yup.string().required().email(),\n                    password: Yup.string().required()\n                })}\n                onSubmit={async (values, {setSubmitting, setErrors}) => {\n                    try {\n                        await signInWithEmail(values);\n                        setSubmitting(false);\n                        dispatch(closeModal());\n                    } catch (error) {\n                        setErrors({auth: 'Problem with username or password'});\n                        setSubmitting(false);\n                    }\n                }}\n            >\n                {({isSubmitting, isValid, dirty, errors}) => (\n                    <Form className='ui form'>\n                        <MyTextInput name='email' placeholder='Email Address' />\n                        <MyTextInput name='password' placeholder='Password' type='password' />\n                        {errors.auth && <Label basic color='red' style={{marginBottom: 10}} content={errors.auth} />}\n                        <Button \n                            loading={isSubmitting}\n                            disabled={!isValid || !dirty || isSubmitting}\n                            type='submit'\n                            fluid\n                            size='large'\n                            color='teal'\n                            content='Login'\n                        />\n                        <Divider horizontal>Or</Divider>\n                        <SocialLogin />\n                    </Form>\n                )}\n            </Formik>\n        </ModalWrapper>\n    )\n}"]},"metadata":{},"sourceType":"module"}