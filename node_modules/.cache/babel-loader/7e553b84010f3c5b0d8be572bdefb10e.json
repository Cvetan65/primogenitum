{"ast":null,"code":"var _jsxFileName = \"/home/cvetan/Documents/AKTUELNO/PrevozSemanticUI/prevoz-cist/src/features/events/eventDashboard/EventDashboard.jsx\";\nimport React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport EventList from './EventList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport EventListItemPlaceholder from './EventListItemPlaceholder';\nimport EventFilters from './EventFilters';\nimport { listenToEventsFromFirestore } from '../../../app/firestore/firestoreService';\nimport { listenToEvents } from '../eventActions';\nimport useFirestoreCollection from '../../../app/hooks/useFirestoreCollection';\nimport { useState } from 'react';\nexport default function EventDashboard() {\n  const dispatch = useDispatch();\n  const {\n    events\n  } = useSelector(state => state.event);\n  const {\n    loading\n  } = useSelector(state => state.async);\n  const {\n    authenticated\n  } = useSelector(state);\n  const [predicate, setPredicate] = useState(new Map([['startDate', new Date()], ['filter', 'all']]));\n\n  function handleSetPredicate(key, value) {\n    setPredicate(new Map(predicate.set(key, value)));\n  }\n\n  useFirestoreCollection({\n    query: () => listenToEventsFromFirestore(predicate),\n    data: events => dispatch(listenToEvents(events)),\n    deps: [dispatch, predicate]\n  });\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, loading && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EventListItemPlaceholder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EventListItemPlaceholder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(EventList, {\n    events: events,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EventFilters, {\n    predicate: predicate,\n    setPredicate: handleSetPredicate,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/cvetan/Documents/AKTUELNO/PrevozSemanticUI/prevoz-cist/src/features/events/eventDashboard/EventDashboard.jsx"],"names":["React","Grid","EventList","useSelector","useDispatch","EventListItemPlaceholder","EventFilters","listenToEventsFromFirestore","listenToEvents","useFirestoreCollection","useState","EventDashboard","dispatch","events","state","event","loading","async","authenticated","predicate","setPredicate","Map","Date","handleSetPredicate","key","value","set","query","data","deps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAOC,sBAAP,MAAmC,2CAAnC;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,cAAT,GAA0B;AACvC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAaV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcb,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACG,KAAlB,CAA/B;AACA,QAAM;AAACC,IAAAA;AAAD,MAAkBf,WAAW,CAACW,KAAD,CAAnC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CACxC,IAAIW,GAAJ,CAAQ,CACN,CAAC,WAAD,EAAc,IAAIC,IAAJ,EAAd,CADM,EAEN,CAAC,QAAD,EAAW,KAAX,CAFM,CAAR,CADwC,CAA1C;;AAOA,WAASC,kBAAT,CAA4BC,GAA5B,EAAiCC,KAAjC,EAAwC;AACtCL,IAAAA,YAAY,CAAC,IAAIC,GAAJ,CAAQF,SAAS,CAACO,GAAV,CAAcF,GAAd,EAAmBC,KAAnB,CAAR,CAAD,CAAZ;AACD;;AAEDhB,EAAAA,sBAAsB,CAAC;AACrBkB,IAAAA,KAAK,EAAE,MAAMpB,2BAA2B,CAACY,SAAD,CADnB;AAErBS,IAAAA,IAAI,EAAGf,MAAD,IAAYD,QAAQ,CAACJ,cAAc,CAACK,MAAD,CAAf,CAFL;AAGrBgB,IAAAA,IAAI,EAAE,CAACjB,QAAD,EAAWO,SAAX;AAHe,GAAD,CAAtB;AAMA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,OAAO,iBACN,uDACE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,eAOE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEH,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,eAUE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEM,SAAzB;AAAoC,IAAA,YAAY,EAAEI,kBAAlD;AAAsE,IAAA,OAAO,EAAEP,OAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CADF;AAgBD","sourcesContent":["import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport EventList from './EventList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport EventListItemPlaceholder from './EventListItemPlaceholder';\nimport EventFilters from './EventFilters';\nimport { listenToEventsFromFirestore } from '../../../app/firestore/firestoreService';\nimport { listenToEvents } from '../eventActions';\nimport useFirestoreCollection from '../../../app/hooks/useFirestoreCollection';\nimport { useState } from 'react';\n\nexport default function EventDashboard() {\n  const dispatch = useDispatch();\n  const { events } = useSelector((state) => state.event);\n  const { loading } = useSelector((state) => state.async);\n  const {authenticated} = useSelector(state )\n  const [predicate, setPredicate] = useState(\n    new Map([\n      ['startDate', new Date()],\n      ['filter', 'all'],\n    ])\n  );\n\n  function handleSetPredicate(key, value) {\n    setPredicate(new Map(predicate.set(key, value)));\n  }\n\n  useFirestoreCollection({\n    query: () => listenToEventsFromFirestore(predicate),\n    data: (events) => dispatch(listenToEvents(events)),\n    deps: [dispatch, predicate],\n  });\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        {loading && (\n          <>\n            <EventListItemPlaceholder />\n            <EventListItemPlaceholder />\n          </>\n        )}\n        <EventList events={events} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <EventFilters predicate={predicate} setPredicate={handleSetPredicate} loading={loading} />\n      </Grid.Column>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}