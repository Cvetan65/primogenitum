{"ast":null,"code":"import { CREATE_EVENT, UPDATE_EVENT, DELETE_EVENT, FETCH_EVENTS, LISTEN_TO_EVENT_CHAT, LISTEN_TO_SELECTED_EVENT, CLEAR_EVENTS, SET_FILTER, SET_START_DATE } from './eventConstants';\nimport { asyncActionStart, asyncActionFinish, asyncActionError } from '../../app/async/asyncReducer';\nimport { dataFromSnapshot, fetchEventsFromFirestore } from '../../app/firestore/firestoreService';\nexport function fetchEvents(filter, startDate, limit, lastDocSnapshot) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n\n    try {\n      const snapshot = await fetchEventsFromFirestore(filter, startDate, limit, lastDocSnapshot).get();\n      const lastVisible = snapshot.docs[snapshot.docs.length - 1];\n      const moreEvents = snapshot.docs.length >= limit;\n      const events = snapshot.docs.map(doc => dataFromSnapshot(doc));\n      dispatch({\n        type: FETCH_EVENTS,\n        payload: {\n          events,\n          moreEvents,\n          lastVisible\n        }\n      });\n      dispatch(asyncActionFinish());\n      return lastVisible;\n    } catch (error) {\n      dispatch(asyncActionError(error));\n    }\n  };\n}\nexport function setFilter(value) {\n  return function (dispatch) {\n    dispatch(clearEvents());\n    dispatch({\n      type: SET_FILTER,\n      payload: value\n    });\n  };\n}\nexport function setStartDate(date) {\n  return function (dispatch) {\n    dispatch(clearEvents());\n    dispatch({\n      type: SET_START_DATE,\n      payload: date\n    });\n  };\n}\nexport function listenToSelectedEvent(event) {\n  return {\n    type: LISTEN_TO_SELECTED_EVENT,\n    payload: event\n  };\n}\nexport function createEvent(event) {\n  return {\n    type: CREATE_EVENT,\n    payload: event\n  };\n}\nexport function updateEvent(event) {\n  return {\n    type: UPDATE_EVENT,\n    payload: event\n  };\n}\nexport function deleteEvent(eventId) {\n  return {\n    type: DELETE_EVENT,\n    payload: eventId\n  };\n}\nexport function listenToEventChat(comments) {\n  return {\n    type: LISTEN_TO_EVENT_CHAT,\n    payload: comments\n  };\n}\nexport function clearEvents() {\n  return {\n    type: CLEAR_EVENTS\n  };\n}","map":{"version":3,"sources":["/home/cvetan/Documents/AKTUELNO/PrevozSemanticUI/prevoz-cist/src/features/events/eventActions.js"],"names":["CREATE_EVENT","UPDATE_EVENT","DELETE_EVENT","FETCH_EVENTS","LISTEN_TO_EVENT_CHAT","LISTEN_TO_SELECTED_EVENT","CLEAR_EVENTS","SET_FILTER","SET_START_DATE","asyncActionStart","asyncActionFinish","asyncActionError","dataFromSnapshot","fetchEventsFromFirestore","fetchEvents","filter","startDate","limit","lastDocSnapshot","dispatch","snapshot","get","lastVisible","docs","length","moreEvents","events","map","doc","type","payload","error","setFilter","value","clearEvents","setStartDate","date","listenToSelectedEvent","event","createEvent","updateEvent","deleteEvent","eventId","listenToEventChat","comments"],"mappings":"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","sourcesContent":["import {\n  CREATE_EVENT,\n  UPDATE_EVENT,\n  DELETE_EVENT,\n  FETCH_EVENTS,\n  LISTEN_TO_EVENT_CHAT,\n  LISTEN_TO_SELECTED_EVENT,\n  CLEAR_EVENTS,\n  SET_FILTER,\n  SET_START_DATE,\n} from './eventConstants';\nimport {\n  asyncActionStart,\n  asyncActionFinish,\n  asyncActionError,\n} from '../../app/async/asyncReducer';\nimport {\n  dataFromSnapshot,\n  fetchEventsFromFirestore,\n} from '../../app/firestore/firestoreService';\n\nexport function fetchEvents(filter, startDate, limit, lastDocSnapshot) {\n  return async function (dispatch) {\n    dispatch(asyncActionStart());\n    try {\n      const snapshot = await fetchEventsFromFirestore(\n        filter,\n        startDate,\n        limit,\n        lastDocSnapshot\n      ).get();\n      const lastVisible = snapshot.docs[snapshot.docs.length - 1];\n      const moreEvents = snapshot.docs.length >= limit;\n      const events = snapshot.docs.map((doc) => dataFromSnapshot(doc));\n      dispatch({ type: FETCH_EVENTS, payload: { events, moreEvents, lastVisible } });\n      dispatch(asyncActionFinish());\n      return lastVisible;\n    } catch (error) {\n      dispatch(asyncActionError(error));\n    }\n  };\n}\n\nexport function setFilter(value) {\n  return function (dispatch) {\n    dispatch(clearEvents());\n    dispatch({ type: SET_FILTER, payload: value });\n  };\n}\n\nexport function setStartDate(date) {\n  return function (dispatch) {\n    dispatch(clearEvents());\n    dispatch({ type: SET_START_DATE, payload: date });\n  };\n}\n\nexport function listenToSelectedEvent(event) {\n  return {\n    type: LISTEN_TO_SELECTED_EVENT,\n    payload: event,\n  };\n}\n\nexport function createEvent(event) {\n  return {\n    type: CREATE_EVENT,\n    payload: event,\n  };\n}\n\nexport function updateEvent(event) {\n  return {\n    type: UPDATE_EVENT,\n    payload: event,\n  };\n}\n\nexport function deleteEvent(eventId) {\n  return {\n    type: DELETE_EVENT,\n    payload: eventId,\n  };\n}\n\nexport function listenToEventChat(comments) {\n  return {\n    type: LISTEN_TO_EVENT_CHAT,\n    payload: comments,\n  };\n}\n\nexport function clearEvents() {\n  return {\n    type: CLEAR_EVENTS,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}