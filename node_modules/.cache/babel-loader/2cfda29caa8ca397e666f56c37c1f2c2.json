{"ast":null,"code":"import firebase from '../config/firebase';\nimport { setUserProfileData } from './firestoreService';\nimport { toast } from 'react-toastify';\nexport function firebaseObjectToArray(snapshot) {\n  if (snapshot) {\n    return Object.entries(snapshot).map(e => Object.assign({}, e[1], {\n      id: e[0]\n    }));\n  }\n}\nexport function signInWithEmail(creds) {\n  return firebase.auth().signInWithEmailAndPassword(creds.email, creds.password);\n}\nexport function signOutFirebase() {\n  return firebase.auth().signOut();\n}\nexport async function registerInFirebase(creds) {\n  try {\n    const result = await firebase.auth().createUserWithEmailAndPassword(creds.email, creds.password);\n    await result.user.updateProfile({\n      displayName: creds.displayName\n    });\n    return await setUserProfileData(result.user);\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function socialLogin(selectedProvider) {\n  let provider;\n\n  if (selectedProvider === 'facebook') {\n    provider = new firebase.auth.FacebookAuthProvider();\n  }\n\n  if (selectedProvider === 'google') {\n    provider = new firebase.auth.GoogleAuthProvider();\n  }\n\n  try {\n    const result = await firebase.auth().signInWithPopup(provider);\n    console.log(result);\n\n    if (result.additionalUserInfo.isNewUser) {\n      await setUserProfileData(result.user);\n    }\n  } catch (error) {\n    console.log(error);\n    toast.error(error.message);\n  }\n}\nexport function updateUserPassword(creds) {\n  const user = firebase.auth().currentUser;\n  return user.updatePassword(creds.newPassword1);\n}\nexport function uploadToFirebaseStorage(file, filename) {\n  const user = firebase.auth().currentUser;\n  const storageRef = firebase.storage().ref();\n  return storageRef.child(`${user.uid}/user_images/${filename}`).put(file);\n}\nexport function deleteFromFirebaseStorage(filename) {\n  const userUid = firebase.auth().currentUser.uid;\n  const storageRef = firebase.storage().ref();\n  const photoRef = storageRef.child(`${userUid}/user_images/${filename}`);\n  return photoRef.delete();\n}\nexport function addEventChatComment(eventId, comment) {\n  const user = firebase.auth().currentUser;\n  const newComment = {\n    displayName: user.displayName,\n    photoURL: user.photoURL,\n    uid: user.uid,\n    text: comment,\n    date: Date.now()\n  };\n  return firebase.database().ref(`chat/${eventId}`).push(newComment);\n}\nexport function getEventChatRef(eventId) {\n  return firebase.database().ref(`chat/${eventId}`).orderByKey;\n}","map":{"version":3,"sources":["/home/cvetan/Documents/AKTUELNO/PrevozSemanticUI/prevoz-cist/src/app/firestore/firebaseService.js"],"names":["firebase","setUserProfileData","toast","firebaseObjectToArray","snapshot","Object","entries","map","e","assign","id","signInWithEmail","creds","auth","signInWithEmailAndPassword","email","password","signOutFirebase","signOut","registerInFirebase","result","createUserWithEmailAndPassword","user","updateProfile","displayName","error","socialLogin","selectedProvider","provider","FacebookAuthProvider","GoogleAuthProvider","signInWithPopup","console","log","additionalUserInfo","isNewUser","message","updateUserPassword","currentUser","updatePassword","newPassword1","uploadToFirebaseStorage","file","filename","storageRef","storage","ref","child","uid","put","deleteFromFirebaseStorage","userUid","photoRef","delete","addEventChatComment","eventId","comment","newComment","photoURL","text","date","Date","now","database","push","getEventChatRef","orderByKey"],"mappings":"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","sourcesContent":["import firebase from '../config/firebase';\nimport { setUserProfileData } from './firestoreService';\nimport { toast } from 'react-toastify';\n\nexport function firebaseObjectToArray(snapshot) {\n  if (snapshot) {\n    return Object.entries(snapshot).map(e => Object.assign({}, e[1], {id: e[0]}))\n  }\n}\n\nexport function signInWithEmail(creds) {\n  return firebase\n    .auth()\n    .signInWithEmailAndPassword(creds.email, creds.password);\n}\n\nexport function signOutFirebase() {\n  return firebase.auth().signOut();\n}\n\nexport async function registerInFirebase(creds) {\n  try {\n    const result = await firebase\n      .auth()\n      .createUserWithEmailAndPassword(creds.email, creds.password);\n    await result.user.updateProfile({\n      displayName: creds.displayName,\n    });\n    return await setUserProfileData(result.user);\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function socialLogin(selectedProvider) {\n  let provider;\n  if (selectedProvider === 'facebook') {\n    provider = new firebase.auth.FacebookAuthProvider();\n  }\n  if (selectedProvider === 'google') {\n    provider = new firebase.auth.GoogleAuthProvider();\n  }\n  try {\n    const result = await firebase.auth().signInWithPopup(provider);\n    console.log(result);\n    if (result.additionalUserInfo.isNewUser) {\n      await setUserProfileData(result.user);\n    }\n  } catch (error) {\n    console.log(error)\n    toast.error(error.message);\n  }\n}\n\nexport function updateUserPassword(creds) {\n  const user = firebase.auth().currentUser;\n  return user.updatePassword(creds.newPassword1);\n}\n\nexport function uploadToFirebaseStorage(file, filename) {\n  const user = firebase.auth().currentUser;\n  const storageRef = firebase.storage().ref();\n  return storageRef.child(`${user.uid}/user_images/${filename}`).put(file);\n}\n\nexport function deleteFromFirebaseStorage(filename) {\n  const userUid = firebase.auth().currentUser.uid;\n  const storageRef = firebase.storage().ref();\n  const photoRef = storageRef.child(`${userUid}/user_images/${filename}`);\n  return photoRef.delete();\n}\n\nexport function addEventChatComment(eventId, comment) {\n  const user = firebase.auth().currentUser;\n  const newComment = {\n    displayName: user.displayName,\n    photoURL: user.photoURL,\n    uid: user.uid,\n    text: comment,\n    date: Date.now()\n    \n  }\n  return firebase.database().ref(`chat/${eventId}`).push(newComment);\n}\n\nexport function getEventChatRef(eventId) {\n  return firebase.database().ref(`chat/${eventId}`).orderByKey\n}"]},"metadata":{},"sourceType":"module"}