{"ast":null,"code":"var _jsxFileName = \"/home/cvetan/Documents/AKTUELNO/PrevozSemanticUI/prevoz-cist/src/features/events/eventDetailed/EventDetailedPage.jsx\";\nimport React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport EventDetailedHeader from './EventDetailedHeader';\nimport EventDetailedInfo from './EventDetailedInfo';\nimport EventDetailedChat from './EventDetailedChat';\nimport EventDetailedSidebar from './EventDetailedSidebar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useFirestoreDoc from '../../../app/hooks/useFirestoreDoc';\nimport { listenToEventFromFirestore } from '../../../app/firestore/firestoreService';\nimport { listenToEvents } from '../eventActions';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { Redirect } from 'react-router-dom';\nexport default function EventDetailedPage({\n  match\n}) {\n  var _event$attendees;\n\n  const dispatch = useDispatch();\n  const {\n    currentUser\n  } = useSelector(state => state.auth);\n  const event = useSelector(state => state.event.selectedEvent);\n  const {\n    loading,\n    error\n  } = useSelector(state => state.async);\n  const isHost = (event === null || event === void 0 ? void 0 : event.hostUid) === currentUser.uid;\n  const isGoing = event === null || event === void 0 ? void 0 : (_event$attendees = event.attendees) === null || _event$attendees === void 0 ? void 0 : _event$attendees.some(a => a.id === currentUser.uid);\n  useFirestoreDoc({\n    query: () => listenToEventFromFirestore(match.params.id),\n    data: event => dispatch(listenToEvents([event])),\n    deps: [match.params.id, dispatch]\n  });\n  if (loading || !event && !error) return /*#__PURE__*/React.createElement(LoadingComponent, {\n    content: \"Loading event...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  });\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EventDetailedHeader, {\n    event: event,\n    isGoing: isGoing,\n    isHost: isHost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(EventDetailedInfo, {\n    event: event,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(EventDetailedChat, {\n    eventId: event.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EventDetailedSidebar, {\n    attendees: event === null || event === void 0 ? void 0 : event.attendees,\n    hostUid: event.hostUid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/cvetan/Documents/AKTUELNO/PrevozSemanticUI/prevoz-cist/src/features/events/eventDetailed/EventDetailedPage.jsx"],"names":["React","Grid","EventDetailedHeader","EventDetailedInfo","EventDetailedChat","EventDetailedSidebar","useSelector","useDispatch","useFirestoreDoc","listenToEventFromFirestore","listenToEvents","LoadingComponent","Redirect","EventDetailedPage","match","dispatch","currentUser","state","auth","event","selectedEvent","loading","error","async","isHost","hostUid","uid","isGoing","attendees","some","a","id","query","params","data","deps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport EventDetailedHeader from './EventDetailedHeader';\nimport EventDetailedInfo from './EventDetailedInfo';\nimport EventDetailedChat from './EventDetailedChat';\nimport EventDetailedSidebar from './EventDetailedSidebar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useFirestoreDoc from '../../../app/hooks/useFirestoreDoc';\nimport { listenToEventFromFirestore } from '../../../app/firestore/firestoreService';\nimport { listenToEvents } from '../eventActions';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport { Redirect } from 'react-router-dom';\n\nexport default function EventDetailedPage({ match }) {\n  const dispatch = useDispatch();\n  const { currentUser } = useSelector((state) => state.auth);\n  const event = useSelector((state) =>\n    state.event.selectedEvent\n  );\n  const { loading, error } = useSelector((state) => state.async);\n  const isHost = event?.hostUid === currentUser.uid;\n  const isGoing = event?.attendees?.some(a => a.id === currentUser.uid);\n\n  useFirestoreDoc({\n    query: () => listenToEventFromFirestore(match.params.id),\n    data: (event) => dispatch(listenToEvents([event])),\n    deps: [match.params.id, dispatch],\n  });\n\n  if (loading || (!event && !error))\n    return <LoadingComponent content='Loading event...' />;\n\n  if (error) return <Redirect to='/error' />;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <EventDetailedHeader event={event} isGoing={isGoing} isHost={isHost} />\n        <EventDetailedInfo event={event} />\n        <EventDetailedChat eventId={event.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <EventDetailedSidebar attendees={event?.attendees} hostUid={event.hostUid} />\n      </Grid.Column>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}