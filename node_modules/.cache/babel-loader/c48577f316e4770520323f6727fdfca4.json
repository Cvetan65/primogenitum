{"ast":null,"code":"import firebase from '../config/firebase';\nconst db = firebase.firestore();\nexport function dataFromSnapshot(snapshot) {\n  if (!snapshot.exists) return undefined;\n  const data = snapshot.data();\n\n  for (const prop in data) {\n    if (data.hasOwnProperty(prop)) {\n      if (data[prop] instanceof firebase.firestore.Timestamp) {\n        data[prop] = data[prop].toDate();\n      }\n    }\n  }\n\n  return { ...data,\n    id: snapshot.id\n  };\n}\nexport function fetchEventsFromFirestore(filter, startDate, limit, lastDocSnapshot = null) {\n  const user = firebase.auth().currentUser;\n  let eventsRef = db.collection('events').orderBy('date').startAfter(lastDocSnapshot).limit(limit);\n\n  switch (filter) {\n    case 'isGoing':\n      return eventsRef.where('attendeeIds', 'array-contains', user.uid).where('date', '>=', startDate);\n\n    case 'isHost':\n      return eventsRef.where('hostUid', '==', user.uid).where('date', '>=', predicate.get('startDate'));\n\n    default:\n      return eventsRef.where('date', '>=', predicate.get('startDate'));\n  }\n}\nexport function listenToEventFromFirestore(eventId) {\n  return db.collection('events').doc(eventId);\n}\nexport function addEventToFirestore(event) {\n  const user = firebase.auth().currentUser;\n  return db.collection('events').add({ ...event,\n    hostUid: user.uid,\n    hostedBy: user.displayName,\n    hostPhotoURL: user.photoURL || null,\n    attendees: firebase.firestore.FieldValue.arrayUnion({\n      id: user.uid,\n      displayName: user.displayName,\n      photoURL: user.photoURL || null\n    }),\n    attendeeIds: firebase.firestore.FieldValue.arrayUnion(user.uid)\n  });\n}\nexport function updateEventInFirestore(event) {\n  return db.collection('events').doc(event.id).update(event);\n}\nexport function deleteEventInFirestore(eventId) {\n  return db.collection('events').doc(eventId).delete();\n}\nexport function cancelEventToggle(event) {\n  return db.collection('events').doc(event.id).update({\n    isCancelled: !event.isCancelled\n  });\n}\nexport function setUserProfileData(user) {\n  return db.collection('users').doc(user.uid).set({\n    displayName: user.displayName,\n    email: user.email,\n    photoURL: user.photoURL || null,\n    createdAt: firebase.firestore.FieldValue.serverTimestamp()\n  });\n}\nexport function getUserProfile(userId) {\n  return db.collection('users').doc(userId);\n}\nexport async function updateUserProfile(profile) {\n  const user = firebase.auth().currentUser;\n\n  try {\n    if (user.displayName !== profile.displayName) {\n      await user.updateProfile({\n        displayName: profile.displayName\n      });\n    }\n\n    return await db.collection('users').doc(user.uid).update(profile);\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function updateUserProfilePhoto(downloadURL, filename) {\n  const user = firebase.auth().currentUser;\n  const userDocRef = db.collection('users').doc(user.uid);\n\n  try {\n    const userDoc = await userDocRef.get();\n\n    if (!userDoc.data().photoURL) {\n      await db.collection('users').doc(user.uid).update({\n        photoURL: downloadURL\n      });\n      await user.updateProfile({\n        photoURL: downloadURL\n      });\n    }\n\n    return await db.collection('users').doc(user.uid).collection('photos').add({\n      name: filename,\n      url: downloadURL\n    });\n  } catch (error) {\n    throw error;\n  }\n}\nexport function getUserPhotos(userUid) {\n  return db.collection('users').doc(userUid).collection('photos');\n}\nexport async function setMainPhoto(photo) {\n  const user = firebase.auth().currentUser;\n  const today = new Date();\n  const eventDocQuery = db.collection('events').where('attendeeIds', 'array-contains', user.uid).where('date', '>=', today);\n  const userFollowingRef = db.collection('following').doc(user.uid).collection('userFollowing');\n  const batch = db.batch();\n  batch.update(db.collection('users').doc(user.uid), {\n    photoURL: photo.url\n  });\n\n  try {\n    const eventsQuerySnap = await eventDocQuery.get();\n\n    for (let i = 0; i < eventsQuerySnap.docs.length; i++) {\n      let eventDoc = eventsQuerySnap.docs[i];\n\n      if (eventDoc.data().hostUid === user.uid) {\n        batch.update(eventsQuerySnap.docs[i].ref, {\n          hostPhotoURL: photo.url\n        });\n      }\n\n      batch.update(eventsQuerySnap.docs[i].ref, {\n        attendees: eventDoc.data().attendees.filter(attendee => {\n          if (attendee.id === user.uid) {\n            attendee.photoURL = photo.url;\n          }\n\n          return attendee;\n        })\n      });\n    }\n\n    const userFollowingSnap = await userFollowingRef.get();\n    userFollowingSnap.docs.forEach(docRef => {\n      let followingDocRef = db.collection('following').doc(docRef.id).collection('userFollowers').doc(user.uid);\n      batch.update(followingDocRef, {\n        photoURL: photo.url\n      });\n    });\n    await batch.commit();\n    return await user.updateProfile({\n      photoURL: photo.url\n    });\n  } catch (error) {\n    throw error;\n  }\n}\nexport function deletePhotoFromCollection(photoId) {\n  const userUid = firebase.auth().currentUser.uid;\n  return db.collection('users').doc(userUid).collection('photos').doc(photoId).delete();\n}\nexport function addUserAttendance(event) {\n  const user = firebase.auth().currentUser;\n  return db.collection('events').doc(event.id).update({\n    attendees: firebase.firestore.FieldValue.arrayUnion({\n      id: user.uid,\n      displayName: user.displayName,\n      photoURL: user.photoURL || null\n    }),\n    attendeeIds: firebase.firestore.FieldValue.arrayUnion(user.uid)\n  });\n}\nexport async function cancelUserAttendance(event) {\n  const user = firebase.auth().currentUser;\n\n  try {\n    const eventDoc = await db.collection('events').doc(event.id).get();\n    return db.collection('events').doc(event.id).update({\n      attendeeIds: firebase.firestore.FieldValue.arrayRemove(user.uid),\n      attendees: eventDoc.data().attendees.filter(attendee => attendee.id !== user.uid)\n    });\n  } catch (error) {\n    throw error;\n  }\n}\nexport function getUserEventsQuery(activeTab, userUid) {\n  let eventsRef = db.collection('events');\n  const today = new Date();\n\n  switch (activeTab) {\n    case 1:\n      // past events\n      return eventsRef.where('attendeeIds', 'array-contains', userUid).where('date', '<=', today).orderBy('date', 'desc');\n\n    case 2:\n      // hosting\n      return eventsRef.where('hostUid', '==', userUid).orderBy('date');\n\n    default:\n      return eventsRef.where('attendeeIds', 'array-contains', userUid).where('date', '>=', today).orderBy('date');\n  }\n}\nexport async function followUser(profile) {\n  const user = firebase.auth().currentUser;\n  const batch = db.batch();\n\n  try {\n    batch.set(db.collection('following').doc(user.uid).collection('userFollowing').doc(profile.id), {\n      displayName: profile.displayName,\n      photoURL: profile.photoURL,\n      uid: profile.id\n    });\n    batch.update(db.collection('users').doc(user.uid), {\n      followingCount: firebase.firestore.FieldValue.increment(1)\n    });\n    return await batch.commit();\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function unfollowUser(profile) {\n  const user = firebase.auth().currentUser;\n  const batch = db.batch();\n\n  try {\n    batch.delete(db.collection('following').doc(user.uid).collection('userFollowing').doc(profile.id));\n    batch.update(db.collection('users').doc(user.uid), {\n      followingCount: firebase.firestore.FieldValue.increment(-1)\n    });\n    return await batch.commit();\n  } catch (error) {\n    throw error;\n  }\n}\nexport function getFollowersCollection(profileId) {\n  return db.collection('following').doc(profileId).collection('userFollowers');\n}\nexport function getFollowingCollection(profileId) {\n  return db.collection('following').doc(profileId).collection('userFollowing');\n}\nexport function getFollowingDoc(profileId) {\n  const userUid = firebase.auth().currentUser.uid;\n  return db.collection('following').doc(userUid).collection('userFollowing').doc(profileId).get();\n}","map":{"version":3,"sources":["/home/cvetan/Documents/AKTUELNO/PrevozSemanticUI/prevoz-cist/src/app/firestore/firestoreService.js"],"names":["firebase","db","firestore","dataFromSnapshot","snapshot","exists","undefined","data","prop","hasOwnProperty","Timestamp","toDate","id","fetchEventsFromFirestore","filter","startDate","limit","lastDocSnapshot","user","auth","currentUser","eventsRef","collection","orderBy","startAfter","where","uid","predicate","get","listenToEventFromFirestore","eventId","doc","addEventToFirestore","event","add","hostUid","hostedBy","displayName","hostPhotoURL","photoURL","attendees","FieldValue","arrayUnion","attendeeIds","updateEventInFirestore","update","deleteEventInFirestore","delete","cancelEventToggle","isCancelled","setUserProfileData","set","email","createdAt","serverTimestamp","getUserProfile","userId","updateUserProfile","profile","updateProfile","error","updateUserProfilePhoto","downloadURL","filename","userDocRef","userDoc","name","url","getUserPhotos","userUid","setMainPhoto","photo","today","Date","eventDocQuery","userFollowingRef","batch","eventsQuerySnap","i","docs","length","eventDoc","ref","attendee","userFollowingSnap","forEach","docRef","followingDocRef","commit","deletePhotoFromCollection","photoId","addUserAttendance","cancelUserAttendance","arrayRemove","getUserEventsQuery","activeTab","followUser","followingCount","increment","unfollowUser","getFollowersCollection","profileId","getFollowingCollection","getFollowingDoc"],"mappings":"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","sourcesContent":["import firebase from '../config/firebase';\n\nconst db = firebase.firestore();\n\nexport function dataFromSnapshot(snapshot) {\n  if (!snapshot.exists) return undefined;\n  const data = snapshot.data();\n\n  for (const prop in data) {\n    if (data.hasOwnProperty(prop)) {\n      if (data[prop] instanceof firebase.firestore.Timestamp) {\n        data[prop] = data[prop].toDate();\n      }\n    }\n  }\n\n  return {\n    ...data,\n    id: snapshot.id,\n  };\n}\n\nexport function fetchEventsFromFirestore(\n  filter,\n  startDate,\n  limit,\n  lastDocSnapshot = null\n) {\n  const user = firebase.auth().currentUser;\n  let eventsRef = db\n    .collection('events')\n    .orderBy('date')\n    .startAfter(lastDocSnapshot)\n    .limit(limit);\n  switch (filter) {\n    case 'isGoing':\n      return eventsRef\n        .where('attendeeIds', 'array-contains', user.uid)\n        .where('date', '>=', startDate);\n    case 'isHost':\n      return eventsRef\n        .where('hostUid', '==', user.uid)\n        .where('date', '>=', predicate.get('startDate'));\n    default:\n      return eventsRef.where('date', '>=', predicate.get('startDate'));\n  }\n}\n\nexport function listenToEventFromFirestore(eventId) {\n  return db.collection('events').doc(eventId);\n}\n\nexport function addEventToFirestore(event) {\n  const user = firebase.auth().currentUser;\n  return db.collection('events').add({\n    ...event,\n    hostUid: user.uid,\n    hostedBy: user.displayName,\n    hostPhotoURL: user.photoURL || null,\n    attendees: firebase.firestore.FieldValue.arrayUnion({\n      id: user.uid,\n      displayName: user.displayName,\n      photoURL: user.photoURL || null,\n    }),\n    attendeeIds: firebase.firestore.FieldValue.arrayUnion(user.uid),\n  });\n}\n\nexport function updateEventInFirestore(event) {\n  return db.collection('events').doc(event.id).update(event);\n}\n\nexport function deleteEventInFirestore(eventId) {\n  return db.collection('events').doc(eventId).delete();\n}\n\nexport function cancelEventToggle(event) {\n  return db.collection('events').doc(event.id).update({\n    isCancelled: !event.isCancelled,\n  });\n}\n\nexport function setUserProfileData(user) {\n  return db\n    .collection('users')\n    .doc(user.uid)\n    .set({\n      displayName: user.displayName,\n      email: user.email,\n      photoURL: user.photoURL || null,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n}\n\nexport function getUserProfile(userId) {\n  return db.collection('users').doc(userId);\n}\n\nexport async function updateUserProfile(profile) {\n  const user = firebase.auth().currentUser;\n  try {\n    if (user.displayName !== profile.displayName) {\n      await user.updateProfile({\n        displayName: profile.displayName,\n      });\n    }\n    return await db.collection('users').doc(user.uid).update(profile);\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function updateUserProfilePhoto(downloadURL, filename) {\n  const user = firebase.auth().currentUser;\n  const userDocRef = db.collection('users').doc(user.uid);\n  try {\n    const userDoc = await userDocRef.get();\n    if (!userDoc.data().photoURL) {\n      await db.collection('users').doc(user.uid).update({\n        photoURL: downloadURL,\n      });\n      await user.updateProfile({\n        photoURL: downloadURL,\n      });\n    }\n    return await db.collection('users').doc(user.uid).collection('photos').add({\n      name: filename,\n      url: downloadURL,\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport function getUserPhotos(userUid) {\n  return db.collection('users').doc(userUid).collection('photos');\n}\n\nexport async function setMainPhoto(photo) {\n  const user = firebase.auth().currentUser;\n  const today = new Date();\n  const eventDocQuery = db\n    .collection('events')\n    .where('attendeeIds', 'array-contains', user.uid)\n    .where('date', '>=', today);\n  const userFollowingRef = db\n    .collection('following')\n    .doc(user.uid)\n    .collection('userFollowing');\n\n  const batch = db.batch();\n\n  batch.update(db.collection('users').doc(user.uid), {\n    photoURL: photo.url,\n  });\n\n  try {\n    const eventsQuerySnap = await eventDocQuery.get();\n    for (let i = 0; i < eventsQuerySnap.docs.length; i++) {\n      let eventDoc = eventsQuerySnap.docs[i];\n      if (eventDoc.data().hostUid === user.uid) {\n        batch.update(eventsQuerySnap.docs[i].ref, {\n          hostPhotoURL: photo.url,\n        });\n      }\n      batch.update(eventsQuerySnap.docs[i].ref, {\n        attendees: eventDoc.data().attendees.filter((attendee) => {\n          if (attendee.id === user.uid) {\n            attendee.photoURL = photo.url;\n          }\n          return attendee;\n        }),\n      });\n    }\n    const userFollowingSnap = await userFollowingRef.get();\n    userFollowingSnap.docs.forEach((docRef) => {\n      let followingDocRef = db\n        .collection('following')\n        .doc(docRef.id)\n        .collection('userFollowers')\n        .doc(user.uid);\n      batch.update(followingDocRef, {\n        photoURL: photo.url\n      })\n    });\n\n    await batch.commit();\n\n    return await user.updateProfile({\n      photoURL: photo.url,\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport function deletePhotoFromCollection(photoId) {\n  const userUid = firebase.auth().currentUser.uid;\n  return db\n    .collection('users')\n    .doc(userUid)\n    .collection('photos')\n    .doc(photoId)\n    .delete();\n}\n\nexport function addUserAttendance(event) {\n  const user = firebase.auth().currentUser;\n  return db\n    .collection('events')\n    .doc(event.id)\n    .update({\n      attendees: firebase.firestore.FieldValue.arrayUnion({\n        id: user.uid,\n        displayName: user.displayName,\n        photoURL: user.photoURL || null,\n      }),\n      attendeeIds: firebase.firestore.FieldValue.arrayUnion(user.uid),\n    });\n}\n\nexport async function cancelUserAttendance(event) {\n  const user = firebase.auth().currentUser;\n  try {\n    const eventDoc = await db.collection('events').doc(event.id).get();\n    return db\n      .collection('events')\n      .doc(event.id)\n      .update({\n        attendeeIds: firebase.firestore.FieldValue.arrayRemove(user.uid),\n        attendees: eventDoc\n          .data()\n          .attendees.filter((attendee) => attendee.id !== user.uid),\n      });\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport function getUserEventsQuery(activeTab, userUid) {\n  let eventsRef = db.collection('events');\n  const today = new Date();\n  switch (activeTab) {\n    case 1: // past events\n      return eventsRef\n        .where('attendeeIds', 'array-contains', userUid)\n        .where('date', '<=', today)\n        .orderBy('date', 'desc');\n    case 2: // hosting\n      return eventsRef.where('hostUid', '==', userUid).orderBy('date');\n    default:\n      return eventsRef\n        .where('attendeeIds', 'array-contains', userUid)\n        .where('date', '>=', today)\n        .orderBy('date');\n  }\n}\n\nexport async function followUser(profile) {\n  const user = firebase.auth().currentUser;\n  const batch = db.batch();\n  try {\n    batch.set(\n      db\n        .collection('following')\n        .doc(user.uid)\n        .collection('userFollowing')\n        .doc(profile.id),\n      {\n        displayName: profile.displayName,\n        photoURL: profile.photoURL,\n        uid: profile.id,\n      }\n    );\n    batch.update(db.collection('users').doc(user.uid), {\n      followingCount: firebase.firestore.FieldValue.increment(1),\n    });\n    return await batch.commit();\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function unfollowUser(profile) {\n  const user = firebase.auth().currentUser;\n  const batch = db.batch();\n  try {\n    batch.delete(\n      db\n        .collection('following')\n        .doc(user.uid)\n        .collection('userFollowing')\n        .doc(profile.id)\n    );\n\n    batch.update(db.collection('users').doc(user.uid), {\n      followingCount: firebase.firestore.FieldValue.increment(-1),\n    });\n\n    return await batch.commit();\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport function getFollowersCollection(profileId) {\n  return db.collection('following').doc(profileId).collection('userFollowers');\n}\n\nexport function getFollowingCollection(profileId) {\n  return db.collection('following').doc(profileId).collection('userFollowing');\n}\n\nexport function getFollowingDoc(profileId) {\n  const userUid = firebase.auth().currentUser.uid;\n  return db\n    .collection('following')\n    .doc(userUid)\n    .collection('userFollowing')\n    .doc(profileId)\n    .get();\n}"]},"metadata":{},"sourceType":"module"}