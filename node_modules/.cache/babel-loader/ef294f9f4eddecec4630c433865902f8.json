{"ast":null,"code":"import firebase from '../config/firebase';\nconst db = firebase.firestore();\nexport function dataFromSnapshot(snapshot) {\n  if (!snapshot.exists) return undefined;\n  const data = snapshot.data();\n\n  for (const prop in data) {\n    if (data.hasOwnProperty(prop)) {\n      if (data[prop] instanceof firebase.firestore.Timestamp) {\n        data[prop] = data[prop].toDate();\n      }\n    }\n  }\n\n  return { ...data,\n    id: snapshot.id\n  };\n}\nexport function listenToEventsFromFirestore(predicate, limit) {\n  const user = firebase.auth().currentUser;\n  let eventsRef = db.collection('events').orderBy('date').limit(2);\n\n  switch (predicate.get('filter')) {\n    case 'isGoing':\n      return eventsRef.where('attendeeIds', 'array-contains', user.uid).where('date', '>=', predicate.get('startDate'));\n\n    case 'isHost':\n      return eventsRef.where('hostUid', '==', user.uid).where('date', '>=', predicate.get('startDate'));\n\n    default:\n      return eventsRef.where('date', '>=', predicate.get('startDate'));\n  }\n}\nexport function listenToEventFromFirestore(eventId) {\n  return db.collection('events').doc(eventId);\n}\nexport function addEventToFirestore(event) {\n  const user = firebase.auth().currentUser;\n  return db.collection('events').add({ ...event,\n    hostUid: user.uid,\n    hostedBy: user.displayName,\n    hostPhotoURL: user.photoURL || null,\n    attendees: firebase.firestore.FieldValue.arrayUnion({\n      id: user.uid,\n      displayName: user.displayName,\n      photoURL: user.photoURL || null\n    }),\n    attendeeIds: firebase.firestore.FieldValue.arrayUnion(user.uid)\n  });\n}\nexport function updateEventInFirestore(event) {\n  return db.collection('events').doc(event.id).update(event);\n}\nexport function deleteEventInFirestore(eventId) {\n  return db.collection('events').doc(eventId).delete();\n}\nexport function cancelEventToggle(event) {\n  return db.collection('events').doc(event.id).update({\n    isCancelled: !event.isCancelled\n  });\n}\nexport function setUserProfileData(user) {\n  return db.collection('users').doc(user.uid).set({\n    displayName: user.displayName,\n    email: user.email,\n    photoURL: user.photoURL || null,\n    createdAt: firebase.firestore.FieldValue.serverTimestamp()\n  });\n}\nexport function getUserProfile(userId) {\n  return db.collection('users').doc(userId);\n}\nexport async function updateUserProfile(profile) {\n  const user = firebase.auth().currentUser;\n\n  try {\n    if (user.displayName !== profile.displayName) {\n      await user.updateProfile({\n        displayName: profile.displayName\n      });\n    }\n\n    return await db.collection('users').doc(user.uid).update(profile);\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function updateUserProfilePhoto(downloadURL, filename) {\n  const user = firebase.auth().currentUser;\n  const userDocRef = db.collection('users').doc(user.uid);\n\n  try {\n    const userDoc = await userDocRef.get();\n\n    if (!userDoc.data().photoURL) {\n      await db.collection('users').doc(user.uid).update({\n        photoURL: downloadURL\n      });\n      await user.updateProfile({\n        photoURL: downloadURL\n      });\n    }\n\n    return await db.collection('users').doc(user.uid).collection('photos').add({\n      name: filename,\n      url: downloadURL\n    });\n  } catch (error) {\n    throw error;\n  }\n}\nexport function getUserPhotos(userUid) {\n  return db.collection('users').doc(userUid).collection('photos');\n}\nexport async function setMainPhoto(photo) {\n  const user = firebase.auth().currentUser;\n\n  try {\n    await db.collection('users').doc(user.uid).update({\n      photoURL: photo.url\n    });\n    return await user.updateProfile({\n      photoURL: photo.url\n    });\n  } catch (error) {\n    throw error;\n  }\n}\nexport function deletePhotoFromCollection(photoId) {\n  const userUid = firebase.auth().currentUser.uid;\n  return db.collection('users').doc(userUid).collection('photos').doc(photoId).delete();\n}\nexport function addUserAttendance(event) {\n  const user = firebase.auth().currentUser;\n  return db.collection('events').doc(event.id).update({\n    attendees: firebase.firestore.FieldValue.arrayUnion({\n      id: user.uid,\n      displayName: user.displayName,\n      photoURL: user.photoURL || null\n    }),\n    attendeeIds: firebase.firestore.FieldValue.arrayUnion(user.uid)\n  });\n}\nexport async function cancelUserAttendance(event) {\n  const user = firebase.auth().currentUser;\n\n  try {\n    const eventDoc = await db.collection('events').doc(event.id).get();\n    return db.collection('events').doc(event.id).update({\n      attendeeIds: firebase.firestore.FieldValue.arrayRemove(user.uid),\n      attendees: eventDoc.data().attendees.filter(attendee => attendee.id !== user.uid)\n    });\n  } catch (error) {\n    throw error;\n  }\n}\nexport function getUserEventsQuery(activeTab, userUid) {\n  let eventsRef = db.collection('events');\n  const today = new Date();\n\n  switch (activeTab) {\n    case 1:\n      // past events\n      return eventsRef.where('attendeeIds', 'array-contains', userUid).where('date', '<=', today).orderBy('date', 'desc');\n\n    case 2:\n      // hosting\n      return eventsRef.where('hostUid', '==', userUid).orderBy('date');\n\n    default:\n      return eventsRef.where('attendeeIds', 'array-contains', userUid).where('date', '>=', today).orderBy('date');\n  }\n}\nexport async function followUser(profile) {\n  const user = firebase.auth().currentUser;\n  const batch = db.batch();\n\n  try {\n    batch.set(db.collection('following').doc(user.uid).collection('userFollowing').doc(profile.id), {\n      displayName: profile.displayName,\n      photoURL: profile.photoURL,\n      uid: profile.id\n    });\n    batch.update(db.collection('users').doc(user.uid), {\n      followingCount: firebase.firestore.FieldValue.increment(1)\n    });\n    return await batch.commit();\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function unfollowUser(profile) {\n  const user = firebase.auth().currentUser;\n  const batch = db.batch();\n\n  try {\n    batch.delete(db.collection('following').doc(user.uid).collection('userFollowing').doc(profile.id));\n    batch.update(db.collection('users').doc(user.uid), {\n      followingCount: firebase.firestore.FieldValue.increment(-1)\n    });\n    return await batch.commit();\n  } catch (error) {\n    throw error;\n  }\n}\nexport function getFollowersCollection(profileId) {\n  return db.collection('following').doc(profileId).collection('userFollowers');\n}\nexport function getFollowingCollection(profileId) {\n  return db.collection('following').doc(profileId).collection('userFollowing');\n}\nexport function getFollowingDoc(profileId) {\n  const userUid = firebase.auth().currentUser.uid;\n  return db.collection('following').doc(userUid).collection('userFollowing').doc(profileId).get();\n}","map":{"version":3,"sources":["/home/cvetan/Documents/AKTUELNO/PrevozSemanticUI/prevoz-cist/src/app/firestore/firestoreService.js"],"names":["firebase","db","firestore","dataFromSnapshot","snapshot","exists","undefined","data","prop","hasOwnProperty","Timestamp","toDate","id","listenToEventsFromFirestore","predicate","limit","user","auth","currentUser","eventsRef","collection","orderBy","get","where","uid","listenToEventFromFirestore","eventId","doc","addEventToFirestore","event","add","hostUid","hostedBy","displayName","hostPhotoURL","photoURL","attendees","FieldValue","arrayUnion","attendeeIds","updateEventInFirestore","update","deleteEventInFirestore","delete","cancelEventToggle","isCancelled","setUserProfileData","set","email","createdAt","serverTimestamp","getUserProfile","userId","updateUserProfile","profile","updateProfile","error","updateUserProfilePhoto","downloadURL","filename","userDocRef","userDoc","name","url","getUserPhotos","userUid","setMainPhoto","photo","deletePhotoFromCollection","photoId","addUserAttendance","cancelUserAttendance","eventDoc","arrayRemove","filter","attendee","getUserEventsQuery","activeTab","today","Date","followUser","batch","followingCount","increment","commit","unfollowUser","getFollowersCollection","profileId","getFollowingCollection","getFollowingDoc"],"mappings":"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","sourcesContent":["import firebase from '../config/firebase';\n\nconst db = firebase.firestore();\n\nexport function dataFromSnapshot(snapshot) {\n  if (!snapshot.exists) return undefined;\n  const data = snapshot.data();\n\n  for (const prop in data) {\n    if (data.hasOwnProperty(prop)) {\n      if (data[prop] instanceof firebase.firestore.Timestamp) {\n        data[prop] = data[prop].toDate();\n      }\n    }\n  }\n\n  return {\n    ...data,\n    id: snapshot.id,\n  };\n}\n\nexport function listenToEventsFromFirestore(predicate, limit) {\n  const user = firebase.auth().currentUser;\n  let eventsRef = db.collection('events').orderBy('date').limit(2);\n  switch (predicate.get('filter')) {\n    case 'isGoing':\n      return eventsRef\n        .where('attendeeIds', 'array-contains', user.uid)\n        .where('date', '>=', predicate.get('startDate'));\n    case 'isHost':\n      return eventsRef\n        .where('hostUid', '==', user.uid)\n        .where('date', '>=', predicate.get('startDate'));\n    default:\n      return eventsRef.where('date', '>=', predicate.get('startDate'));\n  }\n}\n\nexport function listenToEventFromFirestore(eventId) {\n  return db.collection('events').doc(eventId);\n}\n\nexport function addEventToFirestore(event) {\n  const user = firebase.auth().currentUser;\n  return db.collection('events').add({\n    ...event,\n    hostUid: user.uid,\n    hostedBy: user.displayName,\n    hostPhotoURL: user.photoURL || null,\n    attendees: firebase.firestore.FieldValue.arrayUnion({\n      id: user.uid,\n      displayName: user.displayName,\n      photoURL: user.photoURL || null,\n    }),\n    attendeeIds: firebase.firestore.FieldValue.arrayUnion(user.uid),\n  });\n}\n\nexport function updateEventInFirestore(event) {\n  return db.collection('events').doc(event.id).update(event);\n}\n\nexport function deleteEventInFirestore(eventId) {\n  return db.collection('events').doc(eventId).delete();\n}\n\nexport function cancelEventToggle(event) {\n  return db.collection('events').doc(event.id).update({\n    isCancelled: !event.isCancelled,\n  });\n}\n\nexport function setUserProfileData(user) {\n  return db\n    .collection('users')\n    .doc(user.uid)\n    .set({\n      displayName: user.displayName,\n      email: user.email,\n      photoURL: user.photoURL || null,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n}\n\nexport function getUserProfile(userId) {\n  return db.collection('users').doc(userId);\n}\n\nexport async function updateUserProfile(profile) {\n  const user = firebase.auth().currentUser;\n  try {\n    if (user.displayName !== profile.displayName) {\n      await user.updateProfile({\n        displayName: profile.displayName,\n      });\n    }\n    return await db.collection('users').doc(user.uid).update(profile);\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function updateUserProfilePhoto(downloadURL, filename) {\n  const user = firebase.auth().currentUser;\n  const userDocRef = db.collection('users').doc(user.uid);\n  try {\n    const userDoc = await userDocRef.get();\n    if (!userDoc.data().photoURL) {\n      await db.collection('users').doc(user.uid).update({\n        photoURL: downloadURL,\n      });\n      await user.updateProfile({\n        photoURL: downloadURL,\n      });\n    }\n    return await db.collection('users').doc(user.uid).collection('photos').add({\n      name: filename,\n      url: downloadURL,\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport function getUserPhotos(userUid) {\n  return db.collection('users').doc(userUid).collection('photos');\n}\n\nexport async function setMainPhoto(photo) {\n  const user = firebase.auth().currentUser;\n  try {\n    await db.collection('users').doc(user.uid).update({\n      photoURL: photo.url,\n    });\n    return await user.updateProfile({\n      photoURL: photo.url,\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport function deletePhotoFromCollection(photoId) {\n  const userUid = firebase.auth().currentUser.uid;\n  return db\n    .collection('users')\n    .doc(userUid)\n    .collection('photos')\n    .doc(photoId)\n    .delete();\n}\n\nexport function addUserAttendance(event) {\n  const user = firebase.auth().currentUser;\n  return db\n    .collection('events')\n    .doc(event.id)\n    .update({\n      attendees: firebase.firestore.FieldValue.arrayUnion({\n        id: user.uid,\n        displayName: user.displayName,\n        photoURL: user.photoURL || null,\n      }),\n      attendeeIds: firebase.firestore.FieldValue.arrayUnion(user.uid),\n    });\n}\n\nexport async function cancelUserAttendance(event) {\n  const user = firebase.auth().currentUser;\n  try {\n    const eventDoc = await db.collection('events').doc(event.id).get();\n    return db\n      .collection('events')\n      .doc(event.id)\n      .update({\n        attendeeIds: firebase.firestore.FieldValue.arrayRemove(user.uid),\n        attendees: eventDoc\n          .data()\n          .attendees.filter((attendee) => attendee.id !== user.uid),\n      });\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport function getUserEventsQuery(activeTab, userUid) {\n  let eventsRef = db.collection('events');\n  const today = new Date();\n  switch (activeTab) {\n    case 1: // past events\n      return eventsRef\n        .where('attendeeIds', 'array-contains', userUid)\n        .where('date', '<=', today)\n        .orderBy('date', 'desc');\n    case 2: // hosting\n      return eventsRef.where('hostUid', '==', userUid).orderBy('date');\n    default:\n      return eventsRef\n        .where('attendeeIds', 'array-contains', userUid)\n        .where('date', '>=', today)\n        .orderBy('date');\n  }\n}\n\nexport async function followUser(profile) {\n  const user = firebase.auth().currentUser;\n  const batch = db.batch();\n  try {\n    batch.set( db.collection('following').doc(user.uid).collection('userFollowing').doc(profile.id),{\n      displayName: profile.displayName, \n      photoURL: profile.photoURL, \n      uid: profile.id\n    });\n  \n    batch.update( db.collection('users').doc(user.uid),{\n      followingCount: firebase.firestore.FieldValue.increment(1)\n    })\n   \n    return await batch.commit();\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function unfollowUser(profile) {\n  const user =  firebase.auth().currentUser;\n  const batch = db.batch();\n  \n  try {\n    batch.delete( db.collection('following').doc(user.uid).collection('userFollowing').doc(profile.id));\n    \n    batch.update( db.collection('users').doc(user.uid),{\n      followingCount: firebase.firestore.FieldValue.increment(-1)\n    })\n   \n    return await batch.commit();\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport function getFollowersCollection(profileId) {\n  return db.collection('following').doc(profileId).collection('userFollowers')\n}\n\nexport function getFollowingCollection(profileId) {\n  return db.collection('following').doc(profileId).collection('userFollowing')\n}\n\nexport function getFollowingDoc(profileId) {\n  const userUid = firebase.auth().currentUser.uid;\n  return db.collection('following').doc(userUid).collection('userFollowing').doc(profileId).get();\n}"]},"metadata":{},"sourceType":"module"}